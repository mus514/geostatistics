% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/priority_quantiles.R
\name{topPrio}
\alias{topPrio}
\title{Priority sites from Zonation layer}
\source{
https://stackoverflow.com/questions/72406230/how-to-select-top-30-of-cells-in-a-raster-by-cell-value-in-r
}
\usage{
topPrio(r, probs, direction = NULL, verbose = FALSE)
}
\arguments{
\item{r}{SpatRaster}

\item{probs}{numeric. Probability [0, 1] passed to `quantile` function. Note that if 2 values are provided to `probs`, `direction` will be set to 'both'}

\item{direction}{character or NULL. Direction to keep only highest ('high') values, lowest ('low') values or 'both'. If q has length >2 and dir Null, will combine different classes together (reclassify the raster based on categories)}

\item{verbose}{logical. If TRUE (default == FALSE), will print information about the Reclassification matrix when `direction = NULL`}
}
\value{
A SpatRaster with the values corresponding to the quantile probability and the direction of value selection. Plots the data.
}
\description{
When performing a Zonation analysis, the output is a raster layer with
continuous values [0, 1].
In some cases, it is required to categorize the Zonation output in the
lower 10% and upper 90% of the values in the raster to find the
regions with low and high priority.
The `topPrio` function assists in finding the regions based on
`quantile` probs arguments. For example, probs = c(0, 0.1, 0.9, 1) make three
categories: 1. between 0 and 0.1, 2. between 0.1 and 0.9, and
3. between 0.9 and 1.
}
\examples{
r <- terra::rast(system.file("ex/elev.tif", package = "terra"))
# Exact extraction of the values above probs
r_tp1 = topPrio(r = r, probs = 0.9, direction = 'high')
terra::plot(r_tp1)
# Exact extraction of the values below probs
r_tp2 = topPrio(r = r, probs = 0.1, direction = 'low')
terra::plot(r_tp2)
# Reclass vals below/above probs
r_tp3 = topPrio(r = r, probs = c(0.1, 0.9))
terra::plot(r_tp3)
# Reclass vals below/above/ between probs
r_tp4 = topPrio(r = r, probs = c(0, 0.1, 0.9, 1), direction = NULL)
terra::plot(r_tp4)
\dontrun{
r_tp5 = topPrio(r = r, probs = c(0, 0.1, 0.9, 1), direction = NULL)
# Change the colour
rb = viridis::viridis(n=3)
terra::plot(r_tp5, col = c(rb[1], 'grey', rb[3]))
}
}
