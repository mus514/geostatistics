% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/open_parquet.R
\name{spatial_join_parquets}
\alias{spatial_join_parquets}
\title{Spatial join in DuckDB}
\usage{
spatial_join_parquets(db1, db2, method = "st_intersects", join_type = "right")
}
\arguments{
\item{db1}{DuckDB, database opened using open_parquet()}

\item{db2}{DuckDB, database opened using open_parquet() to used in spatial join}

\item{method}{Character, method for spatial join of http_link1 and http_link2. One of "st_intersects", "st_disjoint", "st_within", "st_dwithin", 
"st_touches", "st_contains", "st_containsproperly", "st_covers", "st_overlaps", "st_equals", "st_crosses"}

\item{join_type}{Character, type of join. One of "left", "right", "inner", "full"}
}
\value{
DuckDB
}
\description{
Uses SQL to perform spatial joins within DuckDB
}
\examples{
\dontrun{
# Open large dataset you want to reduce spatially
http_link1 <- query_lookup(country="canada",subject = "geo-boundaries-adm1-simplified")
db1 <- open_parquet(
    http_link1$file_path,
    link_expiration_time=15)

# Open smaller dataset used for spatial join
http_link2 <- query_lookup(country="canada",subject = "geo-boundaries-adm1-simplified")
db2 <- open_parquet(
    http_link2$file_path,
    link_expiration_time=15) |>
    dplyr::filter(shapeISO == "CA-QB")

# Perform spatial join
db <- spatial_join_parquets(
    db1,
    db2,
    method="st_within",
    join_type="right") |>
    duckdbfs::to_sf(crs = 4326)

# Plot
plot(duckdbfs::to_sf(db1,crs=4326)$geom)
plot(db$geom,add=TRUE,col="red")

## Use local file for spatial join
# Open large dataset you want to reduce spatially
http_link1 <- query_lookup(country="canada",subject = "geo-boundaries-adm1-simplified")
db1 <- open_parquet(
    http_link1$file_path,
    link_expiration_time=15)

# Open smaller dataset used for spatial join from local file system
http_link2 <- example_montreal_sf # local sf object
db2 <- open_parquet(
    http_link2,
    file_type="sf")

# Perform spatial join
db <- spatial_join_parquets(
    db1,
    db2,
    method="st_intersects",
    join_type="right")|>
    duckdbfs::to_sf(crs = 4326)

# Plot
plot(duckdbfs::to_sf(db1,crs=4326)$geom)
plot(db$geom,add=TRUE,col="red")
}
}
